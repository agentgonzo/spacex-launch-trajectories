{"version":3,"sources":["MissionSelector.js","assets/capsule.png","Map.js","MissionData.js","MissionGraph.js","MissionView.js","App.js","reportWebVitals.js","index.js"],"names":["missions","getMissionByKey","missionKey","filter","mission","key","MissionSelector","props","NavDropdown","title","onSelect","onChange","map","Item","eventKey","href","KSC","lat","lng","Capsule","Image","className","src","capsule","Map","location","Math","max","met","style","height","width","options","maps","fullscreenControl","mapTypeId","MapTypeId","SATELLITE","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","TOP_LEFT","mapTypeIds","ROADMAP","HYBRID","bootstrapURLKeys","defaultCenter","defaultZoom","velocity","toFixed","MissionData","Table","striped","border","hover","size","MissionGraph","Button","onClick","start","pause","reset","MissionView","split","allowResize","defaultSize","url","video","onPlay","onPause","SpacexNavBar","Navbar","bg","Collapse","id","Brand","Toggle","aria-controls","Nav","onMissionChange","App","initialMission","window","hash","replace","useState","setMission","startTime","setStartTime","pauseTime","setPauseTime","running","setRunning","setMet","useEffect","interval","setInterval","Date","now","clearInterval","pauseDuration","useMissionTimer","launch","toLocaleString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8d9ec62.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport PropTypes from 'prop-types'\n\nconst missions = [\n    {\n        'key': 'dm1',\n        'title': \"Demo-1\",\n        'launch': '2019-03-02T07:49:03Z',\n        'video': 'https://www.youtube.com/watch?v=2ZL0tbOZYhE&feature=youtu.be&t=2931'\n    },\n    {\n        'key': 'dm2',\n        'title': \"Demo-2\",\n        'launch': '2020-05-30T19:22:45Z',\n        'video': 'https://www.youtube.com/watch?v=xY96v0OIcK4&feature=youtu.be&t=15756'\n    },\n    {\n        'key': 'crew-1',\n        'title': \" Crew-1\",\n        'launch': '2020-11-16T00:27:17Z',\n        'video': 'https://www.youtube.com/watch?v=E_FIaPBOJgc&feature=youtu.be&t=15150'\n    },\n]\n\nexport const getMissionByKey = (missionKey => missions.filter(mission => mission.key === missionKey)[0])\n\nexport const useMissionTimer = () => {\n    const [startTime, setStartTime] = useState(null)\n    const [pauseTime, setPauseTime] = useState(null)\n    const [running, setRunning] = useState(false)\n    const [met, setMet] = useState(0)\n\n    const start = () => {\n        if(startTime == null) {\n            setStartTime(Date.now())\n        }\n        if(pauseTime) {\n            // We've previously paused the timer, so we need to reset the start time to take account of the pause\n            const pauseDuration = Date.now() - pauseTime\n            setStartTime(startTime + pauseDuration)\n        }\n        setRunning(true)\n    }\n\n    const pause = () => {\n        setPauseTime(Date.now())\n        setRunning(false)\n    }\n\n    const reset = () => {\n        setStartTime(null)\n        setPauseTime(null)\n        setRunning(false)\n        setMet(0)\n    }\n\n    useEffect(() => {\n        if(running) {\n            const interval = setInterval(() => {\n                setMet(Date.now() - startTime)\n            }, 100);\n            return () => clearInterval(interval);\n        }\n    }, [running]);\n\n    return {\n        start,\n        pause,\n        reset,\n        met: met - 10000 // milliseconds\n    }\n}\n\nconst MissionSelector = (props) => {\n    const selectMission = (missionKey) => {\n        props.onChange(getMissionByKey(missionKey))\n    }\n\n    return <NavDropdown title={props.mission.title} onSelect={selectMission}>\n        {missions.map(mission => <NavDropdown.Item\n                key={mission.key}\n                eventKey={mission.key}\n                href={`#${mission.key}`}>\n            {mission.title}\n        </NavDropdown.Item>)}\n    </NavDropdown>\n}\nMissionSelector.propTypes = {\n    mission: PropTypes.object,\n    onChange: PropTypes.func,\n}\n\nexport default MissionSelector;\n","export default __webpack_public_path__ + \"static/media/capsule.eb412449.png\";","import React from 'react';\nimport GoogleMapReact from 'google-map-react'\nimport Image from \"react-bootstrap/Image\";\nimport capsule from \"./assets/capsule.png\"\nimport PropTypes from 'prop-types'\n\n\nconst KSC = {\n    lat: 28.6082,\n    lng: -80.60415\n};\n\nconst Capsule = () => <Image className=\"Capsule\" src={capsule}/>;\n\nexport const Map = (props) => {\n    const location = {\n        lat: KSC.lat + Math.max(0, (props.met * 0.0002)),\n        lng: KSC.lng + Math.max(0, (props.met * 0.0001))\n    }\n\n    const getMapOptions = (maps) => {\n        return  {\n            fullscreenControl: false,\n            mapTypeId: maps.MapTypeId.SATELLITE,\n            mapTypeControlOptions: {\n                style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\n                position: maps.ControlPosition.TOP_LEFT,\n                mapTypeIds: [\n                    maps.MapTypeId.ROADMAP,\n                    maps.MapTypeId.SATELLITE,\n                    maps.MapTypeId.HYBRID\n                ]\n            },\n        }\n    }\n\n    return (\n            // Important! Always set the container height explicitly\n            <div style={{height: '100%', width: '100%'}}>\n                <GoogleMapReact\n                        options={getMapOptions}\n                        bootstrapURLKeys={{key: \"AIzaSyCvcqPLVfUMZdwaXIJej3oZsRpQbTw_KFs\"}}\n                        defaultCenter={KSC}\n                        defaultZoom={6}\n                >\n                    <Capsule lat={location.lat} lng={location.lng}/>\n                </GoogleMapReact>\n            </div>\n    );\n}\nMap.propTypes = {\n    met: PropTypes.number\n}","import {Table} from \"react-bootstrap\";\nimport React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst altitude = (met) => Math.max(0, met * 3).toFixed(0)\nconst velocity = (met) => Math.max(0, met * 2).toFixed(0)\n\nexport const MissionData = (props) => {\n    return <Table striped border hover size=\"sm\">\n        <tbody>\n            <tr>\n                <td>Mission Elapsed Time</td>\n                <td>{(props.met / 1000).toFixed(1)}s</td>\n            </tr>\n            <tr>\n                <td>Altitude</td>\n                <td>{altitude(props.met)}m</td>\n            </tr>\n            <tr>\n                <td>Velocity</td>\n                <td>{velocity(props.met)}km/h</td>\n            </tr>\n        </tbody>\n    </Table>\n}\nMissionData.propTypes = {\n    met: PropTypes.number\n}","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {Button} from \"react-bootstrap\";\n\nexport const MissionGraph = (props) => {\n    return <div>\n        <Button onClick={props.start}>Start</Button>\n        <Button onClick={props.pause}>Pause</Button>\n        <Button onClick={props.reset}>Reset</Button>\n    </div>\n}\nMissionGraph.propTypes = {\n    start: PropTypes.func,\n    pause: PropTypes.func,\n    reset: PropTypes.func,\n}","import SplitPane from \"react-split-pane\";\nimport {Map} from \"./Map\";\nimport ReactPlayer from \"react-player\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {MissionData} from \"./MissionData\";\nimport {MissionGraph} from \"./MissionGraph\";\n\nexport const MissionView = (props) => {\n    return <SplitPane split=\"vertical\" allowResize={true} defaultSize=\"50%\">\n        <SplitPane split=\"horizonal\" allowResize={true} defaultSize=\"50%\">\n            <MissionData met={props.met}/>\n            <MissionGraph start={props.start} pause={props.pause} reset={props.reset}/>\n        </SplitPane>\n        <SplitPane allowResize={true} defaultSize=\"50%\" split=\"horizontal\">\n            <Map met={props.met}/>\n            <ReactPlayer\n                    url={props.mission.video}\n                    width=\"100%\" height=\"100%\"\n                    onPlay={props.start}\n                    onPause={props.pause}\n            />\n        </SplitPane>\n    </SplitPane>\n}\nMissionView.propTypes = {\n    mission: PropTypes.object,\n    start: PropTypes.func,\n    pause: PropTypes.func,\n    reset: PropTypes.func,\n    met: PropTypes.number,\n}","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, {useState} from 'react';\nimport './App.css';\nimport MissionSelector, {getMissionByKey, useMissionTimer} from './MissionSelector';\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport PropTypes from 'prop-types'\n\nimport {MissionView} from \"./MissionView\";\n\nconst SpacexNavBar = (props) => {\n    return <Navbar bg='light'>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Navbar.Brand href=\"/\">SpaceX Launch Trajectories</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Nav className=\"mr-auto\">\n                <Nav.Item>{props.title}</Nav.Item>\n            </Nav>\n            <MissionSelector mission={props.mission} onChange={props.onMissionChange}/>\n        </Navbar.Collapse>\n    </Navbar>\n}\nSpacexNavBar.propTypes = {\n    title: PropTypes.string,\n    mission: PropTypes.object,\n    onMissionChange: PropTypes.func,\n}\n\nfunction App() {\n    const initialMission = window.location.hash.replace(\"#\", \"\")\n    const [mission, setMission] = useState(getMissionByKey(initialMission) || getMissionByKey('crew-1'))\n    const {met, pause, reset, start} = useMissionTimer()\n    const launch = new Date(mission.launch).toLocaleString()\n\n    const onMissionChange = (missionKey) => {\n        setMission(missionKey)\n        reset()\n    }\n\n    return <div className=\"App\">\n        <SpacexNavBar title={`${mission.title}, launched ${launch}`} mission={mission} onMissionChange={onMissionChange}/>\n        <MissionView mission={mission} met={met} start={start} pause={pause} reset={reset}/>\n    </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}